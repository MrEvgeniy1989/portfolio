{"version":3,"file":"static/js/4501.924cd67b.chunk.js","mappings":"6IACA,MAAkBA,EAAH,EAAcC,KAAKC,GAA2BC,EAAc,EAAdA,EAAoB,ECE1E,MAAMC,EACTC,SAAAA,CAAUC,IDFP,SAAqBA,GACxB,MAAM,QAAEC,EAAO,SAAEC,EAAQ,OAAEC,GAAWH,EACtC,QAA+BI,IAA3BF,EAASG,oBACmBD,IAA5BF,EAASI,qBACkBF,IAA3BF,EAASK,oBACeH,IAAxBF,EAASM,iBACkBJ,IAA3BF,EAASO,cACT,OAEJ,MAAMC,EAAcP,EAASD,EAASG,cAAiBM,EAAAA,GACvDV,EAAQW,yBAA2B,kBACnCX,EAAQY,YACRZ,EAAQa,OAAOJ,EAAYb,GAC3BI,EAAQc,IAAIlB,EAAUA,EAAUa,EAdsB,EAcAhB,GACtDO,EAAQe,YACRf,EAAQgB,OACRhB,EAAQW,yBAA2B,aACvC,CCdQM,CAAYlB,EAChB,CACAmB,IAAAA,CAAKnB,IDaF,SAAiBA,GACpB,MAAM,QAAEC,EAAO,SAAEC,EAAQ,OAAEC,GAAWH,EACtC,QAA+BI,IAA3BF,EAASG,oBACmBD,IAA5BF,EAASI,qBACkBF,IAA3BF,EAASK,oBACeH,IAAxBF,EAASM,iBACkBJ,IAA3BF,EAASO,cACT,OAEJ,MAAMW,EAAQ1B,GA5BH,EA4BeQ,EAASM,YAAsBa,EAAUD,EAAQlB,EAASK,cA5BY,KA4BiBe,EAAUF,EAAQlB,EAASO,cA5B5C,KA4ByEc,EAAepB,EAASD,EAASI,eAAkBK,EAAAA,GAC5N,IAAIa,EAAIJ,EAAOK,GAAS,EAExB,IADAxB,EAAQa,OAAOX,EAASR,KAAK+B,IAAIJ,GAAUnB,EAASR,KAAKgC,IAAIL,IACtDE,GAAK9B,EAAU8B,GAAKJ,EACnBK,GACAxB,EAAQ2B,OAAOL,EAAc5B,KAAK+B,IAAIF,EAAIH,GAAUE,EAAc5B,KAAKgC,IAAIH,EAAIH,IAC/EpB,EAAQ2B,OAAOzB,EAASR,KAAK+B,IAAIF,EAAIF,GAAUnB,EAASR,KAAKgC,IAAIH,EAAIF,MAGrErB,EAAQ2B,OAAOzB,EAASR,KAAK+B,IAAIF,EAAIF,GAAUnB,EAASR,KAAKgC,IAAIH,EAAIF,IACrErB,EAAQ2B,OAAOL,EAAc5B,KAAK+B,IAAIF,EAAIH,GAAUE,EAAc5B,KAAKgC,IAAIH,EAAIH,KAEnFI,GAAUA,CAElB,CCnCQI,CAAQ7B,EACZ,CACA8B,YAAAA,CAAaC,EAAW7B,GAAU,IAAA8B,EAAAC,EAAAC,EAAAC,EAAAC,EAC9B,MAAMC,EAAYnC,EAASmC,UAC3BnC,EAASG,eAAgBiC,EAAAA,EAAAA,IAAmC,QAAtBN,EAAU,OAATK,QAAS,IAATA,OAAS,EAATA,EAAW3B,kBAAU,IAAAsB,EAAAA,EAV1C,IAWlB9B,EAASI,gBAAiBgC,EAAAA,EAAAA,IAAoC,QAAvBL,EAAU,OAATI,QAAS,IAATA,OAAS,EAATA,EAAWd,mBAAW,IAAAU,EAAAA,EAXnB,IAY3C/B,EAASK,eAAgB+B,EAAAA,EAAAA,IAAmC,QAAtBJ,EAAU,OAATG,QAAS,IAATA,OAAS,EAATA,EAAWE,kBAAU,IAAAL,EAAAA,EAZO,IAanEhC,EAASM,YAAa8B,EAAAA,EAAAA,IAAgC,QAAnBH,EAAU,OAATE,QAAS,IAATA,OAAS,EAATA,EAAWG,eAAO,IAAAL,EAAAA,EAbkC,GAcxFjC,EAASO,eAAgB6B,EAAAA,EAAAA,IAAmC,QAAtBF,EAAU,OAATC,QAAS,IAATA,OAAS,EAATA,EAAWI,kBAAU,IAAAL,EAAAA,EAdmD,GAenH,E","sources":["../node_modules/.pnpm/@tsparticles+shape-cog@3.3.0/node_modules/@tsparticles/shape-cog/browser/Utils.js","../node_modules/.pnpm/@tsparticles+shape-cog@3.3.0/node_modules/@tsparticles/shape-cog/browser/CogDrawer.js"],"sourcesContent":["import { percentDenominator } from \"@tsparticles/engine\";\nconst double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 }, taperFactor = 0.005;\nexport function drawCogHole(data) {\n    const { context, particle, radius } = data;\n    if (particle.cogHoleRadius === undefined ||\n        particle.cogInnerRadius === undefined ||\n        particle.cogInnerTaper === undefined ||\n        particle.cogNotches === undefined ||\n        particle.cogOuterTaper === undefined) {\n        return;\n    }\n    const holeRadius = (radius * particle.cogHoleRadius) / percentDenominator;\n    context.globalCompositeOperation = \"destination-out\";\n    context.beginPath();\n    context.moveTo(holeRadius, origin.y);\n    context.arc(origin.x, origin.y, holeRadius, minAngle, doublePI);\n    context.closePath();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n}\nexport function drawCog(data) {\n    const { context, particle, radius } = data;\n    if (particle.cogHoleRadius === undefined ||\n        particle.cogInnerRadius === undefined ||\n        particle.cogInnerTaper === undefined ||\n        particle.cogNotches === undefined ||\n        particle.cogOuterTaper === undefined) {\n        return;\n    }\n    const angle = doublePI / (particle.cogNotches * double), taperAI = angle * particle.cogInnerTaper * taperFactor, taperAO = angle * particle.cogOuterTaper * taperFactor, innerRadius = (radius * particle.cogInnerRadius) / percentDenominator;\n    let a = angle, toggle = false;\n    context.moveTo(radius * Math.cos(taperAO), radius * Math.sin(taperAO));\n    for (; a <= doublePI; a += angle) {\n        if (toggle) {\n            context.lineTo(innerRadius * Math.cos(a - taperAI), innerRadius * Math.sin(a - taperAI));\n            context.lineTo(radius * Math.cos(a + taperAO), radius * Math.sin(a + taperAO));\n        }\n        else {\n            context.lineTo(radius * Math.cos(a - taperAO), radius * Math.sin(a - taperAO));\n            context.lineTo(innerRadius * Math.cos(a + taperAI), innerRadius * Math.sin(a + taperAI));\n        }\n        toggle = !toggle;\n    }\n}\n","import { getRangeValue } from \"@tsparticles/engine\";\nimport { drawCog, drawCogHole } from \"./Utils.js\";\nconst defaultHoleRadius = 44, defaultInnerRadius = 72, defaultInnerTaper = 35, defaultNotches = 7, defaultOuterTaper = 50;\nexport class CogDrawer {\n    afterDraw(data) {\n        drawCogHole(data);\n    }\n    draw(data) {\n        drawCog(data);\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData;\n        particle.cogHoleRadius = getRangeValue(shapeData?.holeRadius ?? defaultHoleRadius);\n        particle.cogInnerRadius = getRangeValue(shapeData?.innerRadius ?? defaultInnerRadius);\n        particle.cogInnerTaper = getRangeValue(shapeData?.innerTaper ?? defaultInnerTaper);\n        particle.cogNotches = getRangeValue(shapeData?.notches ?? defaultNotches);\n        particle.cogOuterTaper = getRangeValue(shapeData?.outerTaper ?? defaultOuterTaper);\n    }\n}\n"],"names":["doublePI","Math","PI","origin","CogDrawer","afterDraw","data","context","particle","radius","undefined","cogHoleRadius","cogInnerRadius","cogInnerTaper","cogNotches","cogOuterTaper","holeRadius","percentDenominator","globalCompositeOperation","beginPath","moveTo","arc","closePath","fill","drawCogHole","draw","angle","taperAI","taperAO","innerRadius","a","toggle","cos","sin","lineTo","drawCog","particleInit","container","_shapeData$holeRadius","_shapeData$innerRadiu","_shapeData$innerTaper","_shapeData$notches","_shapeData$outerTaper","shapeData","getRangeValue","innerTaper","notches","outerTaper"],"sourceRoot":""}